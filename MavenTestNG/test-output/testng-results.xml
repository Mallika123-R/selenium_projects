<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="17" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="0" started-at="2021-01-27T15:21:22Z" finished-at="2021-01-27T15:21:22Z">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite name="Suite (1)" duration-ms="48" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="48" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
      <class name="suitB.Advance_feture">
        <test-method status="PASS" signature="init()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="init" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="again1()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="again1" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- again1 -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="afterr" is-config="true" duration-ms="16" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="again()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="again" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- again -->
        <test-method status="PASS" signature="check()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="check" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="check2()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="check2" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check2 -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="login()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="login" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="loggout()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="loggout" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggout -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="after()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="after" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitB.Advance_feture@5e5792a0]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
      </class> <!-- suitB.Advance_feture -->
      <class name="suitB.Data_Provider_createuser">
        <test-method status="PASS" signature="CreatUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="CreatUser" duration-ms="0" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatUser -->
        <test-method status="PASS" signature="CreatUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="CreatUser" duration-ms="16" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Explore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[super]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatUser -->
        <test-method status="PASS" signature="DeleteUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="DeleteUser" duration-ms="0" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chhhhhhh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteUser -->
        <test-method status="PASS" signature="DeleteUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="DeleteUser" duration-ms="0" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Explore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[super]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteUser -->
        <test-method status="PASS" signature="CreatUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="CreatUser" duration-ms="0" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[duper]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcde@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatUser -->
        <test-method status="PASS" signature="DeleteUser(java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:suitB.Data_Provider_createuser@26653222]" name="DeleteUser" duration-ms="0" started-at="2021-01-27T15:21:21Z" data-provider="getData" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[duper]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcde@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteUser -->
      </class> <!-- suitB.Data_Provider_createuser -->
    </test> <!-- Test -->
  </suite> <!-- Suite (1) -->
  <suite name="Suite (0)" duration-ms="110" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="110" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
      <class name="suitA.Advance_feture">
        <test-method status="PASS" signature="init()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="init" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="check()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="check" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="again1()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="again1" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- again1 -->
        <test-method status="PASS" signature="again()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="again" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- again -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="afterr" is-config="true" duration-ms="15" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="loggout()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="loggout" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggout -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="login()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="login" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterr()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="afterr" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterr -->
        <test-method status="PASS" signature="method()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="method" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="check2()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="check2" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check2 -->
        <test-method status="PASS" signature="after()[pri:0, instance:suitA.Advance_feture@7dc7cbad]" name="after" is-config="true" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- suitA.Advance_feture -->
      <class name="suitA.begining">
        <test-method status="PASS" signature="search(org.testng.ITestContext)[pri:1, instance:suitA.begining@d2cc05a]" name="search" duration-ms="0" started-at="2021-01-27T15:21:21Z" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1dfe2924]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method status="FAIL" signature="dologin()[pri:3, instance:suitA.begining@d2cc05a]" name="dologin" duration-ms="16" started-at="2021-01-27T15:21:21Z" depends-on-methods="suitA.begining.phone" finished-at="2021-01-27T15:21:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [XYZ] but found [ABC],
error expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [XYZ] but found [ABC],
error expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at suitA.begining.dologin(begining.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dologin -->
        <test-method status="PASS" signature="phone(org.testng.ITestContext)[pri:2, instance:suitA.begining@d2cc05a]" name="phone" duration-ms="0" started-at="2021-01-27T15:21:21Z" depends-on-methods="suitA.begining.search" finished-at="2021-01-27T15:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1dfe2924]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- phone -->
      </class> <!-- suitA.begining -->
    </test> <!-- Test -->
  </suite> <!-- Suite (0) -->
</testng-results>
